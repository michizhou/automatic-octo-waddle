/******************************************************************************
  *  Name:    Michael Zhou
  *  NetID:   myzhou
  *  Precept: P05
  *
  *  Partner Name:    Conway Niles
  *  Partner NetID:   cniles
  *  Partner Precept: P06
  * 
  *  Description: Attempts to generate a string from a given kgram using a given
  *               Markov model generated from a text file being read in. First
  *               reads in values of order k and maximum number of iterations
  *               from command-line arguments before reading text from standard
  *               input. Takes the first kgram from the text and prints it out
  *               to screen, using the first k characters of the text. For each
  *               subsequent kgram, a random character is generated from the 
  *               Markov model of the text which is added to the kgram. It also
  *               prints each random character after the kgram as it goes until
  *               the string is finished, making the program terminate.
  *
  ******************************************************************************/

public class TextGenerator {
    
    public static void main(String[] args)
    {
        int k = Integer.parseInt(args[0]); // order of the Markov model
        int t = Integer.parseInt(args[1]); // maximum number of iterations
        
        String x = StdIn.readAll(); // text being read in from standard input
        MarkovModel text = new MarkovModel(x, k); // Markov model of text
        String kgram = x.substring(0, k); // first kgram of the Markov model
        System.out.print(kgram); // prints out first kgram of model
        for (int i = 0; i < t - k; i++) {
            // random character generated by Markov model based on each kgram
            // that is newly generated with each iteration
            char randChar = text.random(kgram.substring(i, i+k));
            kgram = kgram + randChar; // adds random character to kgram
            System.out.print(randChar); // prints character after kgram     
        }
        System.out.print('\n'); // prints to new line after string
    }
}
